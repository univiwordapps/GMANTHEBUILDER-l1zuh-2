app GMANTHEBUILDER {
  wasp: {
    version: "^0.11.4"
  },
  title: "GMANTHEBUILDER",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int       @id @default(autoincrement())
    username String    @unique
    password String
    projects Project[]
psl=}

entity Project {=psl
    id          Int        @id @default(autoincrement())
    name        String
    description String
    estimate    Float
    materials   Material[]
    user        User       @relation(fields: [userId], references: [id])
    userId      Int
psl=}

entity Material {=psl
    id        Int     @id @default(autoincrement())
    name      String
    price     Float
    quantity  Int
    project   Project @relation(fields: [projectId], references: [id])
    projectId Int
psl=}

action createProject {
  fn: import { createProject } from "@server/actions.js",
  entities: [User, Project]
}

action addMaterial {
  fn: import { addMaterial } from "@server/actions.js",
  entities: [Project, Material]
}

action updateProject {
  fn: import { updateProject } from "@server/actions.js",
  entities: [User, Project]
}

query getProjects {
  fn: import { getProjects } from "@server/queries.js",
  entities: [User, Project]
}

query getProject {
  fn: import { getProject } from "@server/queries.js",
  entities: [User, Project]
}

query getMaterials {
  fn: import { getMaterials } from "@server/queries.js",
  entities: [Project, Material]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { Dashboard } from "@client/pages/Dashboard.jsx",
  authRequired: true
}

route ProjectRoute { path: "/project/:projectId", to: ProjectPage }
page ProjectPage {
  component: import { Project } from "@client/pages/Project.jsx",
  authRequired: true
}